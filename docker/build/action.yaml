name: 'Build'
description: 'Build image and push to GitHub Packages'
inputs:
  image-name:
    description: 'Name of the Docker image'
    required: true
  dockerfile-path:
    description: 'Path to the Dockerfile'
    required: false
    default: 'Dockerfile'
  context:
    description: 'Build Context'
    required: false
    default: '.'
  build-args:
    description: 'Adds support for Dockerfile build arguments. Ex: "BUILD_UID=1001'
    required: false
    default: ''
  tag-latest:
    description: 'Add latest for generated Docker Tag'
    required: false
    default: 'auto'
  tag-prefix:
    description: 'Add prefix for generated Docker Tag'
    required: false
    default: ''
  tag-prefix-latest:
    description: 'Add prefix for latest Docker Tag'
    required: false
    default: 'false'
  tag-suffix:
    description: 'Add a suffix for generated Docker Tag'
    required: false
    default: ''
  tag-suffix-latest:
    description: 'Add suffix for latest Docker Tag'
    required: false
    default: 'false'
  github-token:
    description: 'GitHub token'
    required: true
  registry:
    description: 'GitHub Packages registry'
    required: false
    default: 'ghcr.io'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=semver,pattern={{version}}
        flavor: |
          latest=${{ inputs.tag-latest }}
          prefix=${{ inputs.tag-prefix }},onlatest=${{ inputs.tag-prefix-latest }}
          suffix=${{ inputs.tag-suffix }},onlatest=${{ inputs.tag-suffix-latest }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile-path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ inputs.registry }}/${{ inputs.image-name }}:cache
        cache-to: type=registry,mode=max,ref=${{ inputs.registry }}/${{ inputs.image-name }}:cache
        build-args: |
          ${{ inputs.build-args }}

    - name: Logout from GitHub Container Registry
      if: always()
      run: docker logout ${{ inputs.registry }}
      shell: bash
